name: Reusable docker image build workflow

on:
  workflow_call:
    inputs:
      namespace-repository:
        description: "The namespace and repository in the following format `namespace/repository` e.g. (flwr/base)."
        required: true
        type: string
      file-dir:
        description: "Path of the directory that contains the Dockerfile."
        required: true
        type: string
      build-args:
        description: "List of build-time variables."
        required: false
        type: string
      tags:
        description: "List of tags."
        required: true
        type: string
    secrets:
      dockerhub-user:
        required: true
      dockerhub-token:
        required: true
    outputs:
      metadata:
        description: "Metadata of the docker image."
        value: ${{ jobs.build-manifest.outputs.metadata }}

permissions:
  contents: read

# based on https://docs.docker.com/build/ci/github-actions/multi-platform/#distribute-build-across-multiple-runners
jobs:
  build:
    name: Build image
    runs-on: ubuntu-22.04
    timeout-minutes: 60
    outputs:
      build-id: ${{ steps.build-id.outputs.id }}
    strategy:
      fail-fast: true
      matrix:
        platform: [
            # build-push action and qemu use different platform names
            # therefore we create a map
            { name: "amd64", qemu: "", docker: "linux/amd64" },
            { name: "arm64", qemu: "arm64", docker: "linux/arm64" },
          ]
    steps:
      - name: Create build id
        id: build-id
        shell: python
        run: |
          import hashlib
          import os

          hash = hashlib.sha256('''${{ inputs.build-args }}'''.encode())
          with open(os.environ['GITHUB_OUTPUT'], 'a') as fh:
              print(f"id={hash.hexdigest()}", file=fh)

      - name: Set up QEMU
        if: matrix.platform.qemu != ''
        uses: docker/setup-qemu-action@68827325e0b33c7199eb31dd4e31fbe9023e06e3 # v3.0.0
        with:
          platforms: ${{ matrix.platform.qemu }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@31cebacef4805868f9ce9a0cb03ee36c32df2ac4 # v5.3.0
        with:
          images: ${{ inputs.namespace-repository }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0

      - name: Login to Docker Hub
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          username: ${{ secrets.dockerhub-user }}
          password: ${{ secrets.dockerhub-token }}

      - name: Build and push
        id: build
        uses: docker/build-push-action@4a13e500e55cf31b7a5d59a38ab2040ab0f42f56 # v5.1.0
        with:
          platforms: ${{ matrix.platform.docker }}
          context: "{{defaultContext}}:${{ inputs.file-dir }}"
          build-args: ${{ inputs.build-args }}
          outputs: type=image,name=${{ inputs.namespace-repository }},push-by-digest=true,name-canonical=true,push=true

      - name: Export digest
        run: |
          mkdir -p /tmp/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "/tmp/digests/${digest#sha256:}"

      - name: Upload digest
        uses: actions/upload-artifact@1eb3cb2b3e0f29609092a73eb033bb759a334595 # v4.1.0
        with:
          name: digests-${{ steps.build-id.outputs.id }}-${{ matrix.platform.name }}
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1

  build-manifest:
    name: Build and push docker manifest for all platforms
    runs-on: ubuntu-22.04
    timeout-minutes: 10
    needs: build
    outputs:
      metadata: ${{ steps.meta.outputs.json }}
    steps:
      - name: Download digests
        uses: actions/download-artifact@6b208ae046db98c579e8a3aa621ab581ff575935 # v4.1.1
        with:
          pattern: digests-${{ needs.build.outputs.build-id }}-*
          path: /tmp/digests
          merge-multiple: true

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@31cebacef4805868f9ce9a0cb03ee36c32df2ac4 # v5.3.0
        with:
          images: ${{ inputs.namespace-repository }}
          tags: ${{ inputs.tags }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0

      - name: Login to Docker Hub
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          username: ${{ secrets.dockerhub-user }}
          password: ${{ secrets.dockerhub-token }}

      - name: Create manifest list and push
        working-directory: /tmp/digests
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
              $(printf '${{ inputs.namespace-repository }}@sha256:%s ' *)
      - name: Inspect image
        run: docker buildx imagetools inspect ${{ inputs.namespace-repository }}:${{ steps.meta.outputs.version }}
